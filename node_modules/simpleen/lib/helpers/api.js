"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updataData = exports.createData = exports.getData = void 0;
const tslib_1 = require("tslib");
const axios_1 = (0, tslib_1.__importDefault)(require("axios"));
const API_URL = "https://api.simpleen.io/";
function getData(config, resource, params = {}) {
    return new Promise((resolve, reject) => {
        axios_1.default
            .get(API_URL + resource, {
            params: Object.assign({ auth_key: config.auth_key }, params),
        })
            .then((value) => {
            resolve(value.data);
        })
            .catch((e) => {
            var _a, _b;
            if (((_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.status) === 401 || ((_b = e === null || e === void 0 ? void 0 : e.response) === null || _b === void 0 ? void 0 : _b.status) === 403) {
                reject("Authentication error - check your authentication key in your config file");
            }
            reject(`${e.response ? e.response.status : ""} - ${e.message}`);
        });
    });
}
exports.getData = getData;
function createData(config, resource, entry = {}) {
    return new Promise((resolve, reject) => {
        return axios_1.default
            .post(API_URL + resource, Object.assign({}, entry), {
            params: {
                auth_key: config.auth_key,
            },
        })
            .then((value) => {
            resolve(value.data);
        })
            .catch((e) => {
            var _a, _b;
            if (((_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.status) === 401 || ((_b = e === null || e === void 0 ? void 0 : e.response) === null || _b === void 0 ? void 0 : _b.status) === 403) {
                reject("Authentication error - check your authentication key in your config file");
            }
            reject(`${e.response ? e.response.status : ""} - ${e.message}`);
        });
    });
}
exports.createData = createData;
function updataData(config, resource, entry = {}) {
    return new Promise((resolve, reject) => {
        axios_1.default
            .post(API_URL + resource, Object.assign({}, entry), {
            params: {
                auth_key: config.auth_key,
            },
        })
            .then((value) => {
            // merge with translatedData
            resolve(value.data);
        })
            .catch((e) => {
            var _a, _b;
            if (((_a = e === null || e === void 0 ? void 0 : e.response) === null || _a === void 0 ? void 0 : _a.status) === 401 || ((_b = e === null || e === void 0 ? void 0 : e.response) === null || _b === void 0 ? void 0 : _b.status) === 403) {
                reject("Authentication error - check your authentication key in your config file");
            }
            reject(`${e.response ? e.response.status : ""} - ${e.message}`);
        });
    });
}
exports.updataData = updataData;
