import { Formality, DataFormat, Interpolation, SimpleenConfig } from "./config";
import { TranslationData } from "./translation";
export declare type Segment = {
    path: string;
    entry: string;
    source_language: string;
    source_entry: string;
    target_language: string;
};
export declare type File = {
    name: string;
    filepath: string;
    dataformat: DataFormat;
    interpolation: Interpolation;
    sourceLanguage: string;
    targetLanguages: string[];
};
export declare type FileResponse = {
    id: string;
    formality: Formality;
} & File;
export declare type UploadSyncData = {
    dataformat: DataFormat;
    sourceData: TranslationData;
    targetData: TranslationData;
    sourceLanguage: string;
    targetLanguage: string;
    file: string;
    interpolation: Interpolation;
};
/**
 * Returns a filename without extension (i.e. /locales/en.json -> en)
 * @param path without variables
 */
export declare function getFileName(filePath: string): string;
/**
 * Get DataFormat from File
 * @param filePath to the target files
 */
export declare function getDataFormatfromFile(filePath: string): DataFormat;
/**
 * Saves new file or returns
 */
export declare function saveFile(config: SimpleenConfig, file: File): Promise<FileResponse>;
/**
 * Uploads file data
 */
export declare function uploadData(config: SimpleenConfig, syncData: UploadSyncData): unknown;
declare const _default: {
    getFileName: typeof getFileName;
    saveFile: typeof saveFile;
    uploadData: typeof uploadData;
};
export default _default;
