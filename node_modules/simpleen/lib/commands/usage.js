"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsageCommand = void 0;
const tslib_1 = require("tslib");
const command_1 = require("@oclif/command");
const chalk_1 = (0, tslib_1.__importDefault)(require("chalk"));
const BaseCommand_1 = (0, tslib_1.__importDefault)(require("../BaseCommand"));
const errors_1 = require("@oclif/errors");
const usage_1 = require("../helpers/usage");
const config_1 = (0, tslib_1.__importDefault)(require("../helpers/config"));
/**
 * Get current quota / usage of API
 */
class UsageCommand extends BaseCommand_1.default {
    async run() {
        const { flags } = this.parse(UsageCommand);
        try {
            const config = config_1.default.loadConfig(flags.config);
            const result = await (0, usage_1.getUsage)(config);
            console.log(`Used ${result.usage.segment} of ${result.plan.maxSegment} Segments`);
            if (result.usage.segment >= result.plan.maxSegment) {
                console.warn(chalk_1.default.yellow("Limit reached. \nYou can upgrade now to keep localizing on https://simpleen.io/app/#/upgrade"));
            }
        }
        catch (e) {
            if (e instanceof Error || typeof e === "string") {
                throw new errors_1.CLIError(e);
            }
            throw new errors_1.CLIError("Unknown error");
        }
    }
}
exports.UsageCommand = UsageCommand;
UsageCommand.description = "Displays the current quota and usage of your plan";
UsageCommand.flags = {
    config: command_1.flags.string({
        default: "./simpleen.config.json",
        description: "Defines where the config file is located",
    }),
};
